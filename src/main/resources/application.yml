# Application Configuration
spring:
  application:
    name: multi-store-backend
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres
    username: postgres.wkwcbdfllvkhotyjkose
    password: MAES@#2025#
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non-null
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    default-models-expand-depth: 1
    default-model-expand-depth: 1

# Logging Configuration
logging:
  level:
    com.ecommerce.multistore: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Rate Limiting Configuration
rate-limit:
  enabled: true
  requests: 100
  window-minutes: 1
  cleanup-interval: 300

# Cache Configuration
spring.cache:
  type: simple
  cache-names: users,brands,categories,products,orders
